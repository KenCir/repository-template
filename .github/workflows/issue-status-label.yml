name: Issue Status Label

on:
  issues:
    types:
      - opened
      - closed
      - reopened
      - assigned

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TODO_LABEL: "'Status: Todo'"
  IN_PROGRESS_LABEL: "'Status: In Progress'"
  COMPLETED_LABEL: "'Status: Completed'"
  BLOCKED_LABEL: "'Status: Blocked'"
  INVALID_LABEL: "'Status: Inactive(Invalid)'"
  DUPLICATE_LABEL: "'Status: Inactive(Duplicate)'"
  ABANDONED_LABEL: "'Status: Inactive(Abandoned)'"

jobs:
  printJob:
    name: Print event
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ github.event.issue.state_reason }}
        run: |
          echo "$GITHUB_CONTEXT"

  add_todo_label_on_issue:
    name: Add Todo label # issueが開かれて、誰もアサインされていなかったら、Todoに変更
    if: (github.event.action == 'opened' || github.event.action == 'reopened') && !github.event.issue.assignee
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [${{ env.TODO_LABEL }}]
            })

  add_in_progress_label_on_issue:
    name: Add In Progress label # issueがアサインされたか、issueが再度開かれて、誰かアサインされていたら、In Progressに変更
    if: github.event.action == 'assigned' || (github.event.action == 'reopened' && github.event.issue.assignee)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [${{ env.IN_PROGRESS_LABEL }}]
            })

  add_completed_label_on_issue:
    name: Add Completed label # issueがcompletedでクローズされたら、Completedに変更
    if: github.event.action == 'closed' && github.event.issue.state_reason == 'completed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [${{ env.COMPLETED_LABEL }}]
            })

  add_inactive_abandoned_label_on_issue:
    name: Add Inactive(Abandoned) label # issueがnot_plannedでクローズされたら、Completedに変更
    if: github.event.action == 'closed' && github.event.issue.state_reason == 'not_planned'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [${{ env.ABANDONED_LABEL }}]
            })

  add_inactive_duplicate_label_on_issue:
    name: Add Inactive(Duplicate) label # issueがduplicateでクローズされたら、Completedに変更
    if: github.event.action == 'closed' && github.event.issue.state_reason == 'duplicate'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [${{ env.DUPLICATE_LABEL }}]
            })

  remove_todo_label_on_issue:
    name: Remove Todo label # In ProgressまたはCompletedに変更されたら、Todoを削除
    if: "${{ (github.event.action == 'assigned' || github.event.action == 'closed') && contains(github.event.issue.labels.*.name, 'Status: Todo') }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ${{ env.TODO_LABEL }}
            })

  remove_in_progress_label_on_issue:
    name: Remove In Progress label # TodoまたはCompletedに変更されたら、In Progressを削除
    if: "${{ (github.event.action == 'reopened' || github.event.action == 'closed') && contains(github.event.issue.labels.*.name, 'Status: In Progress') }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ${{ env.IN_PROGRESS_LABEL }}
            })

  remove_completed_label_on_issue:
    name: Remove Completed label # TodoまたはIn Progressに変更されたら、Completedを削除
    if: "${{ (github.event.action == 'reopened' || github.event.action == 'assigned') && contains(github.event.issue.labels.*.name, 'Status: Completed') }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ${{ env.COMPLETED_LABEL }}
            })

  remove_blocked_label_on_issue:
    name: Remove Blocked label # In ProgressまたはCompleted変更されたら、Blockedを削除
    if: "${{ (github.event.action == 'assigned' || github.event.action == 'closed') && contains(github.event.issue.labels.*.name, 'Status: Blocked') }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ${{ env.BLOCKED_LABEL }}
            })

  remove_inactive_invalid_label_on_issue:
    name: Remove Inactive(Invalid) label # TodoまたはIn Progressに変更されたら、Inactive(Invalid)を削除
    if: "${{ (github.event.action == 'reopened' || github.event.action == 'assigned') && (contains(github.event.issue.labels.*.name, 'Status: Inactive(Invalid)')) }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ${{ env.INVALID_LABEL }}
            })

  remove_inactive_duplicate_label_on_issue:
    name: Remove Inactive(Duplicate) label # TodoまたはIn Progressに変更されたら、Inactive(Duplicate)を削除
    if: "${{ (github.event.action == 'reopened' || github.event.action == 'assigned') && (contains(github.event.issue.labels.*.name, 'Status: Inactive(Duplicate)')) }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ${{ env.DUPLICATE_LABEL }}
            })

  remove_inactive_abandoned_label_on_issue:
    name: Remove Inactive(Abandoned) label # TodoまたはIn Progressに変更されたら、Inactive(Abandoned)を削除
    if: "${{ (github.event.action == 'reopened' || github.event.action == 'assigned') && (contains(github.event.issue.labels.*.name, 'Status: Inactive(Abandoned)')) }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ${{ env.ABANDONED_LABEL }}
            })
